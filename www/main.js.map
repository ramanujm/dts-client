{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create-employee/create-employee.component.css","webpack:///./src/app/components/create-employee/create-employee.component.html","webpack:///./src/app/components/create-employee/create-employee.component.ts","webpack:///./src/app/components/employee-details/employee-details.component.css","webpack:///./src/app/components/employee-details/employee-details.component.html","webpack:///./src/app/components/employee-details/employee-details.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/list-employee/list-employee.component.css","webpack:///./src/app/components/list-employee/list-employee.component.html","webpack:///./src/app/components/list-employee/list-employee.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/menu/menu.component.css","webpack:///./src/app/components/menu/menu.component.html","webpack:///./src/app/components/menu/menu.component.ts","webpack:///./src/app/components/not-found/not-found.component.css","webpack:///./src/app/components/not-found/not-found.component.html","webpack:///./src/app/components/not-found/not-found.component.ts","webpack:///./src/app/components/update-employee/update-employee.component.css","webpack:///./src/app/components/update-employee/update-employee.component.html","webpack:///./src/app/components/update-employee/update-employee.component.ts","webpack:///./src/app/core/employee.ts","webpack:///./src/app/core/material.ts","webpack:///./src/app/service/authentication.service.ts","webpack:///./src/app/service/authguard.service.ts","webpack:///./src/app/service/employee.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { HomeComponent } from './components/home/home.component';\r\nimport { AuthguardService } from './service/authguard.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { UpdateEmployeeComponent } from './components/update-employee/update-employee.component';\r\nimport { CreateEmployeeComponent } from './components/create-employee/create-employee.component';\r\nimport { ListEmployeeComponent } from './components/list-employee/list-employee.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'employees', component: ListEmployeeComponent, canActivate: [AuthguardService] },\r\n  { path: 'addEmployee', component: CreateEmployeeComponent, canActivate: [AuthguardService]},\r\n  { path: 'editEmployee/:id', component: UpdateEmployeeComponent, canActivate: [AuthguardService] },\r\n  { path: '404', component: NotFoundComponent},\r\n  { path: '**', redirectTo: '/404', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menu></app-menu>\\r\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\r\n\r\ndeclare var device: { platform: any; };\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n    ngOnInit() {\r\n    // tslint:disable-next-line:only-arrow-functions\r\n    document.addEventListener('deviceready', function() {\r\n    alert(device.platform);\r\n    }, false);\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CreateEmployeeComponent } from './components/create-employee/create-employee.component';\r\nimport { EmployeeDetailsComponent } from './components/employee-details/employee-details.component';\r\nimport { ListEmployeeComponent } from './components/list-employee/list-employee.component';\r\nimport { EmployeeService } from './service/employee.service';\r\nimport { AuthenticationService } from 'src/app/service/authentication.service';\r\nimport { UpdateEmployeeComponent } from './components/update-employee/update-employee.component';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MaterialModule } from './core/material';\r\nimport { AuthguardService } from './service/authguard.service';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport {DataTablesModule} from 'angular-datatables';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CreateEmployeeComponent,\r\n    EmployeeDetailsComponent,\r\n    ListEmployeeComponent,\r\n    UpdateEmployeeComponent,\r\n    MenuComponent,\r\n    LoginComponent,\r\n    HeaderComponent,\r\n    NotFoundComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    AngularFontAwesomeModule,\r\n    DataTablesModule\r\n  ],\r\n  providers: [EmployeeService, AuthenticationService, AuthguardService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3JlYXRlLWVtcGxveWVlL2NyZWF0ZS1lbXBsb3llZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container col-lg-6\\\">\\r\\n    <h3>Create Employee</h3>\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div [hidden]=\\\"submitted\\\">\\r\\n                <form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\" class=\\\"font-weight-bold\\\">User Name</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userName\\\" required [(ngModel)]=\\\"employee.userName\\\" name=\\\"userName\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\" class=\\\"font-weight-bold\\\">Password</label>\\r\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" required [(ngModel)]=\\\"employee.password\\\" name=\\\"password\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\" class=\\\"font-weight-bold\\\">First Name</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" required [(ngModel)]=\\\"employee.firstName\\\" name=\\\"firstName\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\" class=\\\"font-weight-bold\\\">Last Name</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" required [(ngModel)]=\\\"employee.lastName\\\" name=\\\"lastName\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\" class=\\\"font-weight-bold\\\">Email Address</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"emailId\\\" required [(ngModel)]=\\\"employee.email\\\" name=\\\"emailId\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n                </form>\\r\\n            </div>\\r\\n\\r\\n            <div [hidden]=\\\"!submitted\\\">\\r\\n                <h4>You submitted successfully!</h4>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { EmployeeService } from './../../service/employee.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Employee } from 'src/app/core/employee';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-employee',\r\n  templateUrl: './create-employee.component.html',\r\n  styleUrls: ['./create-employee.component.css']\r\n})\r\nexport class CreateEmployeeComponent implements OnInit {\r\n\r\n  employee: Employee = new Employee();\r\n  submitted = false;\r\n  Employee: any = [];\r\n\r\n  constructor(private http: HttpClient, private empService: EmployeeService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    console.log('calling init in create employee....');\r\n    this.reloadEmployees();\r\n  }\r\n  reloadEmployees() {\r\n    this.getEmployee();\r\n  }\r\n  getEmployee() {\r\n    this.empService.getAllEmployees().subscribe((data) => {\r\n      console.log('getAllEmployees...', data);\r\n      this.Employee = data;\r\n    });\r\n  }\r\n\r\n  newEmployee(): void {\r\n    this.submitted = false;\r\n    this.employee = new Employee();\r\n  }\r\n\r\n  save() {\r\n    console.log('emp before save service call...', this.Employee);\r\n    this.empService.createEmployee(this.employee)\r\n      .subscribe(data => console.log(data), error => console.log(error));\r\n    this.employee = new Employee();\r\n    this.gotolist();\r\n  }\r\n  gotolist() {\r\n    this.router.navigate(['/employees']);\r\n    this.reloadEmployees();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.save();\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW1wbG95ZWUtZGV0YWlscy9lbXBsb3llZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  employee-details works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-employee-details',\r\n  templateUrl: './employee-details.component.html',\r\n  styleUrls: ['./employee-details.component.css']\r\n})\r\nexport class EmployeeDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  header works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".masthead {\\r\\n    min-height: 30rem;\\r\\n    position: relative;\\r\\n    display: table;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n    padding-top: 8rem;\\r\\n    padding-bottom: 8rem;\\r\\n    background: -webkit-gradient(linear, left top, right top, from(rgba(255, 255, 255, 0.1)), to(rgba(255, 255, 255, 0.1))), url('bg-masthead.jpg');\\r\\n    background: linear-gradient(90deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.1) 100%), url('bg-masthead.jpg');\\r\\n    background-position: center center;\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.masthead h1 {\\r\\n    font-size: 4rem;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n@media (min-width: 992px) {\\r\\n    .masthead {\\r\\n        height: 100vh;\\r\\n    }\\r\\n    .masthead h1 {\\r\\n        font-size: 5.5rem;\\r\\n    }\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLFdBQVc7SUFDWCxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLG9CQUFvQjtJQUNwQiwrSUFBc0k7SUFBdEksc0hBQXNJO0lBQ3RJLGtDQUFrQztJQUNsQyw0QkFBNEI7SUFDNUIsc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLFNBQVM7SUFDVCxVQUFVO0FBQ2Q7O0FBRUE7SUFDSTtRQUNJLGFBQWE7SUFDakI7SUFDQTtRQUNJLGlCQUFpQjtJQUNyQjtBQUNKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXN0aGVhZCB7XHJcbiAgICBtaW4taGVpZ2h0OiAzMHJlbTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBwYWRkaW5nLXRvcDogOHJlbTtcclxuICAgIHBhZGRpbmctYm90dG9tOiA4cmVtO1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSkgMCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKSAxMDAlKSwgdXJsKFwiLi4vLi4vLi4vYXNzZXRzL2JnLW1hc3RoZWFkLmpwZ1wiKTtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxufVxyXG5cclxuLm1hc3RoZWFkIGgxIHtcclxuICAgIGZvbnQtc2l6ZTogNHJlbTtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xyXG4gICAgLm1hc3RoZWFkIHtcclxuICAgICAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgfVxyXG4gICAgLm1hc3RoZWFkIGgxIHtcclxuICAgICAgICBmb250LXNpemU6IDUuNXJlbTtcclxuICAgIH1cclxufSJdfQ== */\"","module.exports = \"<div class=\\\"container col-lg-6\\\">\\r\\n    <header class=\\\"masthead d-flex\\\">\\r\\n        <div class=\\\"container text-center my-auto\\\">\\r\\n            <h1 class=\\\"mb-1\\\">dTS</h1>\\r\\n            <h3 class=\\\"mb-5\\\">\\r\\n                <em>A software for antitracking system ! </em>\\r\\n            </h3>\\r\\n            <a class=\\\"btn btn-primary btn-xl js-scroll-trigger\\\" href=\\\"#\\\" (click)=\\\"login()\\\">Login</a>\\r\\n        </div>\\r\\n        <div class=\\\"overlay\\\"></div>\\r\\n    </header>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGlzdC1lbXBsb3llZS9saXN0LWVtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h3> User List </h3>\\r\\n    <!-- No data message -->\\r\\n    <p *ngIf=\\\"Employee.length <= 0\\\" class=\\\"no-data text-center alert-warning\\\"><strong>Server error or there is no User added yet!</strong></p>\\r\\n\\r\\n    <table class=\\\"table table-striped table-bordered table-sm row-border hover\\\" datatable [dtOptions]=\\\"dtOptions\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th scope=\\\"col\\\" hidden>Employee ID</th>\\r\\n                <th scope=\\\"col\\\">User Name</th>\\r\\n                <th scope=\\\"col\\\">First Name</th>\\r\\n                <th scope=\\\"col\\\">Last Name</th>\\r\\n                <th scope=\\\"col\\\">Email</th>\\r\\n                <th scope=\\\"col center\\\">Action</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let employee of Employee; let i = index\\\">\\r\\n                <th scope=\\\"row\\\" hidden>{{employee.id}}</th>\\r\\n                <td>{{employee.userName}}</td>\\r\\n                <td>{{employee.firstName}}</td>\\r\\n                <td>{{employee.lastName}}</td>\\r\\n                <td>{{employee.email}}</td>\\r\\n                <td class=\\\"text-center edit-block\\\">\\r\\n                    <span class=\\\"edit\\\" [routerLink]=\\\"['/editEmployee/', employee.id]\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\">Edit</button>\\r\\n          </span>&nbsp;&nbsp;\\r\\n                    <span class=\\\"delete\\\" (click)=\\\"removeEmployee(employee, i)\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</button>\\r\\n          </span>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n\\r\\n    <!-- Employee list -->\\r\\n    <!-- <table class=\\\"table table-bordered\\\" *ngIf=\\\"Employee.length > 0\\\">\\r\\n        <thead class=\\\"table-success\\\">\\r\\n            <tr>\\r\\n                <th scope=\\\"col\\\" hidden>Employee ID</th>\\r\\n                <th scope=\\\"col\\\">User Name</th>\\r\\n                <th scope=\\\"col\\\">First Name</th>\\r\\n                <th scope=\\\"col\\\">Last Name</th>\\r\\n                <th scope=\\\"col\\\">Email</th>\\r\\n                <th scope=\\\"col center\\\">Action</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let employee of Employee; let i = index\\\">\\r\\n                <th scope=\\\"row\\\" hidden>{{employee.id}}</th>\\r\\n                <td>{{employee.userName}}</td>\\r\\n                <td>{{employee.firstName}}</td>\\r\\n                <td>{{employee.lastName}}</td>\\r\\n                <td>{{employee.email}}</td>\\r\\n                <td class=\\\"text-center edit-block\\\">\\r\\n                    <span class=\\\"edit\\\" [routerLink]=\\\"['/editEmployee/', employee.id]\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\">Edit</button>\\r\\n          </span>&nbsp;&nbsp;\\r\\n                    <span class=\\\"delete\\\" (click)=\\\"removeEmployee(employee, i)\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</button>\\r\\n          </span>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table> -->\\r\\n</div>\"","import { Employee } from './../../core/employee';\r\nimport { EmployeeService } from './../../service/employee.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-list-employee',\r\n  templateUrl: './list-employee.component.html',\r\n  styleUrls: ['./list-employee.component.css']\r\n})\r\nexport class ListEmployeeComponent implements OnInit {\r\n\r\n  Employee: any = [];\r\n  dtOptions: DataTables.Settings = {};\r\n\r\n  constructor(private http: HttpClient, private empService: EmployeeService) { }\r\n\r\n  ngOnInit() {\r\n    this.reloadAllEmployees();\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 5,\r\n      processing: true,\r\n      data: this.Employee\r\n    };\r\n  }\r\n\r\n  reloadAllEmployees() {\r\n    this.getAllEmployee();\r\n  }\r\n\r\n  getAllEmployee() {\r\n    this.empService.getAllEmployees().subscribe((data) => {\r\n      console.log('getAllEmployees===========>', data);\r\n      this.Employee = data;\r\n    });\r\n  }\r\n\r\n  removeEmployee(employee, index) {\r\n    if (window.confirm('Are you sure to delete?')) {\r\n        this.empService.deleteEmployee(employee.id).subscribe((data) => {\r\n          this.Employee.splice(index, 1);\r\n          // console.log('removeEmployee...', data);\r\n          this.reloadAllEmployees();\r\n        },\r\n        error => console.log(error));\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container col-lg-6\\\">\\r\\n    <h3 class=\\\"text-left\\\">Login</h3>\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form class=\\\"form-group\\\">\\r\\n                <div class=\\\"alert alert-warning\\\" *ngIf='invalidLogin'>{{errorMessage}}</div>\\r\\n                <div class=\\\"alert alert-success\\\" *ngIf='loginSuccess'>{{successMessage}}</div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"email\\\">User Name :</label>\\r\\n                    <input type=\\\"text\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" id=\\\"username\\\" [(ngModel)]=\\\"employee.userName\\\" placeholder=\\\"Enter User Name\\\" name=\\\"username\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"pwd\\\">Password:</label>\\r\\n                    <input type=\\\"password\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.password\\\" id=\\\"password\\\" placeholder=\\\"Enter password\\\" name=\\\"password\\\">\\r\\n                </div>\\r\\n                <button (click)=handleLogin() class=\\\"btn btn-success\\\">Login</button>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Employee } from './../../core/employee';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/service/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\nEmployee: any = [];\r\nemployee: Employee = new Employee();\r\nerrorMessage = 'Invalid Credentials';\r\nsuccessMessage: string;\r\ninvalidLogin = false;\r\nloginSuccess = false;\r\n\r\nuserName: string;\r\npassword: string;\r\n\r\n\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // handleLogin() {\r\n  //   this.authService.authenticationService(this.username, this.password).subscribe((result) => {\r\n  //     this.invalidLogin = false;\r\n  //     this.loginSuccess = true;\r\n  //     this.successMessage = 'Login Successful.';\r\n  //     this.router.navigate(['/employees']);\r\n  //   }, () => {\r\n  //     this.invalidLogin = true;\r\n  //     this.loginSuccess = false;\r\n  //   });\r\n  // }\r\n\r\n  handleLogin() {\r\n   // console.log(this.employee.userName + '...' + this.employee.password);\r\n    if (this.authService.authenticate(this.employee.userName, this.employee.password )) {\r\n        this.router.navigate(['/employees']);\r\n        this.invalidLogin = false;\r\n      } else {\r\n        this.invalidLogin = true;\r\n      }\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWVudS9tZW51LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<header>\\r\\n    <nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\r\\n        <div><a href=\\\"https://www.dts.com\\\" class=\\\"navbar-brand\\\">dTS</a></div>\\r\\n        <ul class=\\\"navbar-nav\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <!-- <button *ngIf=\\\"loginservice.isUserLoggedIn()\\\" mat-button mat-flat-button color=\\\"primary\\\" (click)=\\\"showEmployees();\\\">Employees</button> -->\\r\\n                <a *ngIf=\\\" loginservice.isUserLoggedIn() \\\" href=\\\"/employees \\\" class=\\\"nav-link \\\" role=\\\"button \\\" routerLinkActive=\\\"active \\\">Employees</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item \\\" style=\\\"margin-left: 10px; \\\">\\r\\n                <button *ngIf=\\\"loginservice.isUserLoggedIn()\\\" mat-button mat-flat-button color=\\\"primary\\\" (click)=\\\"addEmployee();\\\">Add</button>\\r\\n                <!-- <a *ngIf=\\\"loginservice.isUserLoggedIn() \\\" href=\\\"/addEmployee \\\" class=\\\"nav-link \\\" role=\\\"button \\\" routerLinkActive=\\\"active \\\">Add</a> -->\\r\\n            </li>\\r\\n        </ul>\\r\\n        <ul class=\\\"navbar-nav navbar-collapse justify-content-end \\\">\\r\\n            <li>\\r\\n                <a *ngIf=\\\"loginservice.isUserLoggedIn() \\\" class=\\\"nav-link \\\" href=\\\" \\\" (click)=handleLogout()>Logout</a>\\r\\n            </li>\\r\\n            <!-- <li>\\r\\n                <a *ngIf=\\\"! loginservice.isUserLoggedIn() \\\" class=\\\"nav-link \\\" href=\\\"/login \\\">LogIn</a>\\r\\n            </li> -->\\r\\n        </ul>\\r\\n    </nav>\\r\\n</header>\"","import { AuthenticationService } from 'src/app/service/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  // tslint:disable-next-line:no-inferrable-types\r\n  isLoggedIn: boolean = true;\r\n  constructor(private router: Router, public loginservice: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoggedIn = this.loginservice.isUserLoggedIn();\r\n  }\r\n\r\n  showEmployees() {\r\n    this.router.navigate(['/employees']);\r\n  }\r\n\r\n  addEmployee() {\r\n    // this.router.navigateByUrl('/addEmployee');\r\n    this.router.navigate(['/addEmployee']);\r\n  }\r\n\r\n  handleLogout() {\r\n    console.log('logout clicked...');\r\n    this.loginservice.logOut();\r\n    this.router.navigate(['/login']);\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"#main {\\r\\n    height: 85vh;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbWFpbiB7XHJcbiAgICBoZWlnaHQ6IDg1dmg7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container h-100\\\">\\r\\n    <div class=\\\"row h-100 justify-content-center align-items-center\\\">\\r\\n        <div class=\\\"d-flex justify-content-center align-items-center\\\" id=\\\"main\\\">\\r\\n            <h1 class=\\\"mr-3 pr-3 align-top border-right inline-block align-content-center\\\">403</h1>\\r\\n            <div class=\\\"inline-block align-middle\\\">\\r\\n                <h2 class=\\\"font-weight-normal lead\\\" id=\\\"desc\\\">\\r\\n                    <!-- <fa name=\\\"cog\\\" animation=\\\"spin\\\"></fa> -->\\r\\n                    page you requested was not found.\\r\\n                </h2>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXBkYXRlLWVtcGxveWVlL3VwZGF0ZS1lbXBsb3llZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container col-lg-6\\\">\\r\\n    <h3>Update Employee</h3>\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div [hidden]=\\\"submitted\\\">\\r\\n                <form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">User Name</label>\\r\\n                        <input type=\\\"text\\\" readonly=\\\"readonly\\\" class=\\\"form-control\\\" id=\\\"userName\\\" required [(ngModel)]=\\\"employee.userName\\\" name=\\\"userName\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">password</label>\\r\\n                        <input type=\\\"password\\\" [readOnly]=\\\"this.isEditable\\\" class=\\\"form-control\\\" id=\\\"password\\\" required [(ngModel)]=\\\"employee.password\\\" name=\\\"password\\\">\\r\\n                        <button style=\\\"margin-top:5px;\\\" type=\\\"button\\\" (click)=\\\"handleChangePassword()\\\" class=\\\"btn btn-info btn-sm\\\">Change Password</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">First Name</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" required [(ngModel)]=\\\"employee.firstName\\\" name=\\\"firstName\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">Last Name</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" required [(ngModel)]=\\\"employee.lastName\\\" name=\\\"lastName\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">Email</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"emailId\\\" required [(ngModel)]=\\\"employee.email\\\" name=\\\"email\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { EmployeeService } from './../../service/employee.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Employee } from 'src/app/core/employee';\r\n\r\n@Component({\r\n  selector: 'app-update-employee',\r\n  templateUrl: './update-employee.component.html',\r\n  styleUrls: ['./update-employee.component.css']\r\n})\r\nexport class UpdateEmployeeComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private http: HttpClient, private empService: EmployeeService ) { }\r\nid: number;\r\nemployee: Employee;\r\nsubmitted = false;\r\nisEditable = true;\r\n\r\n  ngOnInit() {\r\n    this.submitted = false;\r\n    this.employee = new Employee();\r\n    this.id = this.route.snapshot.params.id;\r\n    console.log('ID Value...', this.id);\r\n    this.empService.getEmployee(this.id).subscribe(data => {\r\n      console.log('Data ...', data);\r\n      this.employee = data;\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  updateEmployee() {\r\n    this.empService.updateEmployee(this.id, this.employee)\r\n      .subscribe(data => console.log(data), error => console.log(error));\r\n    this.employee = new Employee();\r\n    this.gotoList();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.updateEmployee();\r\n    this.submitted = true;\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/employees']);\r\n  }\r\n\r\n  handleChangePassword() {\r\n    console.log('change pwd field enabled back...');\r\n    this.isEditable = false;\r\n\r\n  }\r\n\r\n}\r\n","export class Employee {\r\n  id: number;\r\n  userName: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatButtonModule, MatCardModule, MatDialogModule, MatInputModule, MatTableModule,\r\n  MatToolbarModule, MatFormFieldModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  // tslint:disable-next-line:max-line-length\r\n  imports: [CommonModule, MatToolbarModule, MatButtonModule, MatCardModule, MatInputModule, MatDialogModule, MatTableModule, MatFormFieldModule],\r\n  // tslint:disable-next-line:max-line-length\r\n  exports: [CommonModule, MatToolbarModule, MatButtonModule, MatCardModule, MatInputModule, MatDialogModule, MatTableModule, MatFormFieldModule],\r\n})\r\n\r\nexport class MaterialModule {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  // BASE_PATH: 'http://localhost:8080'\r\n  baseUrl = 'http://localhost:8080/api/login';\r\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser';\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  // authenticationService(username: string, password: string) {\r\n  //   return this.http.get(`http://localhost:8080/api/v1/basicauth`,\r\n  //     { headers: { authorization: this.createBasicAuthToken(username, password) } }).pipe(map((res) => {\r\n  //       this.username = username;\r\n  //       this.password = password;\r\n  //       this.registerSuccessfulLogin(username, password);\r\n  //     }));\r\n  // }\r\n\r\n  // createBasicAuthToken(username: string, password: string) {\r\n  //   return 'Basic ' + window.btoa(username + ':' + password);\r\n  // }\r\n\r\n  // registerSuccessfulLogin(username, password) {\r\n  //   sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, username);\r\n  // }\r\n\r\n  // logout() {\r\n  //   sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n  //   this.username = null;\r\n  //   this.password = null;\r\n  // }\r\n\r\n  // isUserLoggedIn() {\r\n  //   let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n  //   if (user === null) return false\r\n  //   return true\r\n  // }\r\n\r\n  // getLoggedInUserName() {\r\n  //   let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n  //   if (user === null) return ''\r\n  //   return user\r\n  // }\r\n\r\n  authenticate(username, password) {\r\n    if (username === 'ramanujm' && password === 'password') {\r\n      sessionStorage.setItem('username', username);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  isUserLoggedIn() {\r\n    const user = sessionStorage.getItem('username');\r\n   // console.log(!(user === null));\r\n    return !(user === null);\r\n  }\r\n\r\n  logOut() {\r\n    sessionStorage.removeItem('username');\r\n  }\r\n}\r\n","import { AuthenticationService } from './authentication.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthguardService implements CanActivate {\r\n\r\n  constructor(private authService: AuthenticationService, private router: Router) { }\r\n\r\n  canActivate() {\r\n\r\n    if (this.authService.isUserLoggedIn()) {\r\n      return true;\r\n    } else {\r\n      return this.router.navigateByUrl('/login');\r\n    }\r\n  }\r\n}\r\n","import { Employee } from './../core/employee';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n// tslint:disable-next-line:no-inferrable-types\r\nbaseUrl: string = 'http://localhost:8080/api';\r\nheaders = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Fetch all employee\r\n  getAllEmployees() {\r\n    return this.http.get(`${this.baseUrl}/getEmployeesList`);\r\n}\r\n\r\n// Create\r\ncreateEmployee(data): Observable<any> {\r\n  // let url = `${this.baseUrl}/createEmployee`;\r\n  return this.http.post(`${this.baseUrl}/createEmployee`, data)\r\n    .pipe(\r\n      catchError(this.errorMgmt)\r\n    );\r\n}\r\n\r\n// Get employee\r\ngetEmployee(id): Observable<any> {\r\n  console.log('getEmployee # id => ', id);\r\n  let url = `${this.baseUrl}/getEmployeeById/${id}`;\r\n  return this.http.get(url, {headers: this.headers}).pipe(\r\n    map((res: Response) => {\r\n      return res || {};\r\n    }),\r\n    catchError(this.errorMgmt)\r\n  );\r\n}\r\n\r\n// Update employee\r\nupdateEmployee(id, data): Observable<any> {\r\n  let url = `${this.baseUrl}/update/${id}`;\r\n  return this.http.put(url, data, { headers: this.headers }).pipe(\r\n    catchError(this.errorMgmt)\r\n  );\r\n}\r\n\r\n// Delete employee\r\ndeleteEmployee(id): Observable<any> {\r\n  let url = `${this.baseUrl}/deleteEmployee/${id}`;\r\n  return this.http.delete(url, { headers: this.headers }).pipe(\r\n    catchError(this.errorMgmt)\r\n  );\r\n}\r\n\r\n\r\n\r\n // Error handling\r\n errorMgmt(error: HttpErrorResponse) {\r\n  let errorMessage = '';\r\n  if (error.error instanceof ErrorEvent) {\r\n    // Get client-side error\r\n    errorMessage = error.error.message;\r\n  } else {\r\n    // Get server-side error\r\n    errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n  }\r\n  console.log(errorMessage);\r\n  return throwError(errorMessage);\r\n}\r\n\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}